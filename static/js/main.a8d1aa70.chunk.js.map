{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavItem","handleClick","props","onClick","index","className","this","target","href","link","isActive","name","React","FauxStdOut","command","Splash","avgTypingDelay","cursor","show","stdTypingDelay","Delay","ms","Doc","cards","title","body","linkLabel","wait","map","card","length","Src","MediaCard","getInitalState","hidden","state","setTimeout","setState","App","useState","activeIndex","setActiveIndex","page","setPage","navClick","linkedin","github","fork_me","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8d1aa70.chunk.js","sourcesContent":["import * as React from 'react';\nimport Typist from 'react-typist';\nimport { useState } from 'react';\nimport './App.css';\n\nimport Resume from 'src/media/resume.pdf'; \n\n/**\nApp\n  Single Page Application.\n  I am aware that you typically re-factor things into a src/components folder; however,\n  I really like the way this looks inside of one source file. In addition, this project\n  is all about minimialism... why not live on the edge a little? \n*/\nfunction App() {\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [page, setPage] = useState(0);\n\n  const navClick = (index: number) => {\n    setActiveIndex(index);\n    setPage(index);\n    // console.log(\"clicked:\", activeIndex);\n  };\n\n  const linkedin = \"https://linkedin.com/in/thatnealpatel\";\n  const github = \"https://github.com/thatnealpatel\";\n  const fork_me = \"https://github.com/thatnealpatel/portfolio-website\";\n\n  return (\n    <div className=\"App\">\n      <nav className=\"min-nav no-select\">\n        <NavItem link=\"#\" index={0} isActive={activeIndex === 0} onClick={navClick} name=\"/neal.html\" />\n        <NavItem link=\"#\" index={1} isActive={activeIndex === 1} onClick={navClick} name=\"/doc/\" />\n        <NavItem link=\"#\" index={2} isActive={activeIndex === 2} onClick={navClick} name=\"/src/\" />\n        <NavItem link={linkedin} index={4} isActive={activeIndex === 4} onClick={navClick} name=\"/ext/linkedin.sh\" /> \n        <NavItem link={github} index={5} isActive={activeIndex === 5} onClick={navClick} name=\"/ext/github.sh\" />\n        <NavItem link={fork_me} index={6} isActive={activeIndex === 6} onClick={navClick} name=\"/ext/fork_me.sh\" />       \n      </nav>\n\n      <div className=\"faux-paper\">\n        {page == 0 ?\n          <Splash/>\n          :\n          null\n        }\n        {page == 1 ?\n          <Doc/>\n          :\n          null\n        }\n        {page == 2 ?\n          <Src/>\n          :\n          null\n        }\n        {page == 4 ?\n          <FauxStdOut \n            command=\"./ext/linkedin.sh\"\n            link={linkedin}\n          />\n          :\n          null\n        }\n        {page == 5 ?\n          <FauxStdOut \n            command=\"./ext/github.sh\"\n            link={github}\n          />\n          :\n          null\n        }\n        {page == 6 ?\n          <FauxStdOut \n            command=\"./ext/fork_me.sh\"\n            link={fork_me}\n          />\n          :\n          null\n        }\n      </div>\n    </div>\n  );\n}\n\n\n/**\nNavItem\n  Abstraction for nav elements.\n  Takes NavItemProps in order to faciliate dynamic class assignment.\n  Additionally, there exists one hard-coded component: \n    this.props.index >= 3 :: indicates that NavItem's with index gte 3 \n    are externally linked elements, while all else renders on page.\n*/\ninterface NavItemProps {\n  link: string;\n  index: number;\n  isActive: boolean;\n  onClick: Function;\n  name: string;\n}\n\ninterface NavItemState {\n}\n\nclass NavItem extends React.Component<NavItemProps, NavItemState> {\n  handleClick = () => this.props.onClick(this.props.index)\n\n  render() {\n    return <li className=\"nav-item\">\n      { this.props.index >= 3 ?\n        <a\n          target=\"_blank\"\n          href={this.props.link}\n          className={this.props.isActive ? 'nav-item__selected' : ''} \n          onClick={this.handleClick}>{this.props.name}\n        </a>\n        :\n        <a\n          className={this.props.isActive ? 'nav-item__selected' : ''} \n          onClick={this.handleClick}>{this.props.name}\n        </a>\n      }\n    </li>\n  }\n}\n\n\n/**\nFauxStdOut\n  Abstraction for the fake stdout that is printed when a user clicks an external nav link.\n*/\ninterface FauxStdOutProps {\n  command: string;\n  link: string;\n}\n\ninterface FauxStdOutState {\n}\n\nclass FauxStdOut extends React.Component<FauxStdOutProps, FauxStdOutState> {\n  \n  constructor(props) {\n      super(props);\n  }\n\n  render() {\n    return <div>\n      <p className=\"fp-header\">{`> ${this.props.command}`}</p>\n      <p className=\"fp-body\">\n        {\"HTTP 200 \"}\n        <span className=\"status-green\">OK</span>\n        {` ${this.props.link}`}\n      </p>\n    </div>\n  }\n\n}\n\n\n/**\nSplash\n  Refactored FauxPage component.\n  This component fits into the FauxPaper div and has basic information about\n  myself and navigation.\n*/\nclass Splash extends React.Component {\n\n  // <p className=\"fp-header\">{\"> render /neal.html --ascii-only\"}</p>\n  render() {\n    return <div>\n      <Typist avgTypingDelay={25} cursor={{show: false}}>\n        <p className=\"fp-header\">{\"> render /neal.html --ascii-only --enable-typing\"}</p>\n      </Typist>\n      <Typist avgTypingDelay={1} stdTypingDelay={10} cursor={{show: false}}>\n        <Typist.Delay ms={1500+500} />\n        <p className=\"fp-body\">\n          {\"hi, i'm neal.\"}\n          <br/><br/>{\"i am a software engineer who vicariously lives through the terminal.\"}\n          <br/>{\"hobbies include: cooking, reading, finance, and painting.\"}\n          <br/><br/>{\"this portfolio is meant to mimick my personal system's theme.\"} \n          <br/>{\"additionally, it was designed with minimalism in mind.\"}\n          <br/>{\"eventually, i would like to publish a noscript compatible version.\"} \n          <br/><br/><br/><br/>{\"navigation:\"}\n          <br/><br/>{`/doc/ contains a collection of medium articles i have written, \n          often coinciding with projects that i've completed.`}\n          <br/><br/>{\"/src/ contains a collection of projects and their respective codebases.\"}\n          <br/><br/>{\"/ext/* are various external links that might be relevant.\"} \n        </p>\n      </Typist>\n      <div className=\"gutter\">\n        <p className=\"fp-header\">{\"total 4K, read-only, no-error\"}</p>\n      </div>\n    </div>\n  }\n}\n\n\n/**\nDoc\n  Refactored FauxPage component.\n  This component fits into the FauxPaper div and maps each of the desired cards containing\n  medium article previews.\n  Eventually, it would be nice to use an API for this; however, for the time being\n  it will remain hardcoded.\n*/\nfunction Doc() {\n\n  const cards = [\n    {\n      title: \"I Cheated On Windows And It Was The Best Decision Of My Life\",\n      body: `The Windows Operating System and I had been together for around four years. \n              I admit: I had been in an open relationship with both Windows and macOS for some time; \n              however, Windows and I finally went exclusive. The straw that broke the camel’s back \n              was the constant nagging. I’m sorry Windows, it’s not you; it’s me...no seriously, \n              I cheated on you.`,\n      link: \"https://nealdotpy.medium.com/i-cheated-on-windows-and-it-was-the-best-decision-of-my-life-b380a2f9d9c9\",\n      linkLabel: \"Read More >\",\n      wait: 100+1500\n    },\n    {\n      title: \"If I Can’t Make Money, My Python Trading Bot Will...\",\n      body: `When I was a student in my first year at University, my classes bore me. I wanted to \n      learn how to make money to get paid to go to the classes I didn’t like.`,\n      link: \"https://nealdotpy.medium.com/if-i-cant-make-money-my-python-trading-bot-will-368a592b3c6d\",\n      linkLabel: \"Read More >\",\n      wait: 225+1500\n    },\n    {\n      title: \"I Couldn’t Decided What Camera To Buy So I Made One With A Brain\",\n      body: `TRecently, I’ve taken up uploading videos to YouTube that combine various passions of \n      mine including: coding and comedy. I’ve been trying to decide what kind of camera I want to \n      get, and while it may not be an urgent problem to solve, I ended up researching cameras for \n      longer than I’d like to admit.`,\n      link: \"https://nealdotpy.medium.com/i-couldnt-decided-what-camera-to-buy-so-i-made-one-with-a-brain-c3e7a83faa0e\",\n      linkLabel: \"Read More >\",\n      wait: 300+1500\n    }\n  ];\n\n  return( \n    <div className=\"faux-terminal\">\n      <Typist avgTypingDelay={25} cursor={{show: false}}>\n        <p className=\"fp-header\">{\"> ls /doc/ | render --use-card Doc\"}</p>\n      </Typist>\n      <div className=\"media\">\n        {cards.map( (card) => (\n          <MediaCard wait={card.wait}\n            title={card.title}\n            body={card.body}\n            link={card.link}\n            linkLabel={card.linkLabel} />\n        ))}\n      </div>\n      <div className=\"gutter\">\n        <p className=\"fp-header\">{\"total \"}{cards.length * 20}{\"K, read-only, no-error\"}</p>\n      </div>\n    </div>\n  );\n}\n\n\n/**\nSrc\n  Refactored FauxPage component.\n  This component fits into the FauxPaper div and maps each of the desired cards containing\n  codebase information. \n  Eventually, it would be nice to use an API for this; however, for the time being\n  it will remain hardcoded.\n*/\nfunction Src() {\n\n  const cards = [\n    {\n      title: \"cli-stonks\",\n      body: `A command line interface for running real-time ticker tapes, checking account \n      information, and obtaining real-time quotes for various instruments, and more!`,\n      link: \"https://github.com/nealdotpy/cli-stonks\",\n      linkLabel: \"View on Github >\",\n      wait: 100+1500\n    },\n    {\n      title: \"ml-cam\",\n      body: `Raspberry Pi Zero Camera Pi implementation powered by Machine Learning via \n      Google Cloud Platform's Compute Engine.`,\n      link: \"https://github.com/nealdotpy/ml-cam\",\n      linkLabel: \"View on Github >\",\n      wait: 170+1500\n    },\n    {\n      title: \"public-trading-bot\",\n      body: `A python-based implementation of a stock trading bot that uses the Alpaca API to \n      conduct live and paper trades.`,\n      link: \"https://github.com/nealdotpy/public-trading-bot\",\n      linkLabel: \"View on Github >\",\n      wait: 300+1500\n    } \n  ];\n\n  return( \n    <div className=\"faux-terminal\">\n      <Typist avgTypingDelay={25} cursor={{show: false}}>\n        <p className=\"fp-header\">{\"> ls /src/ | render --use-card Src\"}</p>\n      </Typist>\n      <div className=\"media\">\n        {cards.map( (card) => (\n          <MediaCard wait={card.wait} \n            title={card.title} \n            body={card.body} \n            link={card.link} \n            linkLabel={card.linkLabel} />\n        ))}\n      </div>\n      <div className=\"gutter\">\n        <p className=\"fp-header\">{\"total \"}{cards.length * 20}{\"K, read-only, no-error\"}</p>\n      </div>\n    </div>\n  );\n}\n\n\n/**\nMediaCard\n  Minimal card for displaying information.\n  Note: Only using target=\"_blank\" since this is merely a personal website.\n*/\ninterface MediaCardProps {\n  title: string;\n  body: string;\n  link: string;\n  linkLabel: string;\n  wait: number;\n}\n\ninterface MediaCardState {\n  hidden: boolean;\n}\n\nclass MediaCard extends React.Component<MediaCardProps, MediaCardState> {\n\n  constructor(props) {\n    super(props);\n    this.state = {hidden: true};\n  }\n\n  getInitalState = () => {\n    return({hidden: \"hidden\"});\n  }\n\n  componentDidMount () {\n    setTimeout(() => {\n      this.setState({hidden: false})\n    }, this.props.wait);\n  }\n\n  render() {\n    return this.state.hidden ? '' : <div className={`media-card`}>\n      <p className=\"card-title\">{this.props.title}</p>\n      <p className=\"card-body\">{this.props.body}</p>\n      <div className=\"\">\n        <a target=\"_blank\" className=\"card-link\" href={this.props.link}>{this.props.linkLabel}</a>\n      </div>\n    </div>\n  }\n}\n\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}